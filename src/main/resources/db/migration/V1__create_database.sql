CREATE SCHEMA if not exists db;

-- Create Company Table
CREATE TABLE db.company
(
    companyID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name      VARCHAR(255),
    VAT       BIGINT,
    pin       INT
);

-- Create Collaborator Table
CREATE TABLE db.collaborator
(
    collaboratorID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name           VARCHAR(255),
    email          VARCHAR(255),
    password       VARCHAR(255),
    role           VARCHAR(255),
    pin            VARCHAR(255),
    verified       BOOLEAN DEFAULT FALSE,
    companyID      INT,
    FOREIGN KEY (companyID) REFERENCES company (companyID)
);

-- Create Note Table
CREATE TABLE db.note
(
    noteID         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title          VARCHAR(255),
    description    VARCHAR(255),
    companyID      INT,
    collaboratorID INT,
    createdTs      TIMESTAMP,
    changedTs      TIMESTAMP,
    FOREIGN KEY (companyID) REFERENCES company (companyID) ON DELETE CASCADE,
    FOREIGN KEY (collaboratorID) REFERENCES collaborator(collaboratorID) ON DELETE CASCADE
);

-- Create Land Table
CREATE TABLE db.land
(
    landID    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name      VARCHAR(255),
    area      INT,
    latitude  FLOAT(53),
    longitude FLOAT(53),
    location  VARCHAR(255),
    companyID INT,
    FOREIGN KEY (companyID) REFERENCES company (companyID) ON DELETE CASCADE
);

-- Create Culture Table
CREATE TABLE db.culture
(
    cultureID   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(255),
    date        TIMESTAMP,
    description TEXT,
    landID      INT,
    FOREIGN KEY (landID) REFERENCES land (landID) ON DELETE CASCADE
);

-- Create Status History Table
CREATE TABLE db.status_history
(
    statusHistoryID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    date            TIMESTAMP,
    description     TEXT,
    image           OID,
    cultureID       INT,
    FOREIGN KEY (cultureID) REFERENCES culture (cultureID) ON DELETE CASCADE
);

-- Create Treatment Table
CREATE TABLE db.treatment
(
    treatmentID  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cultureID    INT,
    productName  VARCHAR(255),
    description  TEXT,
    date         TIMESTAMP,
    securityDays INT,
    FOREIGN KEY (cultureID) REFERENCES culture (cultureID) ON DELETE CASCADE
);

CREATE SEQUENCE db.collaborator_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE db.company_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE db.note_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE db.land_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE db.culture_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE db.status_history_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE db.treatment_seq START WITH 1 INCREMENT BY 1;
